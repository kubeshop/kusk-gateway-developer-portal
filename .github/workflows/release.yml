name: Release Kusk Gateway Developer Portal

concurrency:
  group: "release"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

on:
  push:
    tags: 
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  release:
    name: Create and upload release-artifacts
    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "arm64"
            path: arm64v8/node:16.14-buster-slim
          - name: "amd64"
            path: node:16.14-buster-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Docker Metadata for Kusk Gateway Dashboard
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: kubeshop/kusk-devportal
          tags: |
            type=match,pattern=v(.*)
            type=sha
          flavor: |
            latest=true
      
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ github.repository }}:${{ github.ref_name }}-${{ matrix.name }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TARGET=${{ matrix.path }}

  create_manifest:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create Docker manifest and push multi-arch image to Registry
        run: |
          docker manifest create ${{ github.repository }}:${{ github.ref_name }} --amend ${{ github.repository }}:${{ github.ref_name }}-arm64 --amend ${{ github.repository }}:${{ github.ref_name }}-amd64
          docker manifest push -p ${{ github.repository }}:${{ github.ref_name }}
          
          docker manifest create ${{ github.repository }}:latest --amend ${{ github.repository }}:${{ github.ref_name }}-arm64 --amend ${{ github.repository }}:${{ github.ref_name }}-amd64
          docker manifest push -p ${{ github.repository }}:latest

  